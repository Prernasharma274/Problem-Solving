class Solution {
public:
 bool canmake(int val,int bouquet,int flowers,vector<int>bloom)
    {
        int count=0;
        for(int i:bloom)
        {
            if(i<=val)
            {
                count++;
                if(count==flowers)
                {
                    bouquet--;
                    count=0;
                    if(bouquet==0) 
                    return true;
                }
            }
            else count = 0;
        }
        return false;
    }
    int minDays(vector<int>& bloomDay,int m,int k) {
        if(m*k>bloomDay.size()) 
          return -1;
        int low=*min_element(bloomDay.begin(),bloomDay.end());
        int high=*max_element(bloomDay.begin(),bloomDay.end());
        while(low<high)
        {
           int mid=(low+high)/2;
            if(canmake(mid,m,k,bloomDay))
                high=mid;
            else
                low=mid+1;
        }
        return low;
    }
};
