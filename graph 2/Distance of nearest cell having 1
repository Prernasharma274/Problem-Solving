<vector<int>>nearest(vector<vector<int>>grid)
	{
	    // Code here
	    int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>dist(n,vector<int>(m,0));
        vector<vector<int>>vis(n,vector<int>(m,0));
        queue<pair<pair<int,int>, int>> q; 
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(grid[i][j]==1)
                {
                    vis[i][j]=1;
                    q.push({{i,j},0});
                }
            }
        }
        int di[]={1,0,-1,0};
        int dj[]={0,1,0,-1};
        while(!q.empty())
        {
            int ci=q.front().first.first;
            int cj=q.front().first.second;
            int dis=q.front().second;
            q.pop();
            for(int i=0; i<4; i++)
            {
                int ni=ci+di[i];
                int nj=cj+dj[i];
                if(ni>=0 && ni<n && nj>=0 && nj<m && grid[ni][nj]==0 && !vis[ni][nj])
                {
                    q.push({{ni,nj},dis+1});
                    dist[ni][nj]=dis+1;
                    vis[ni][nj]=1;
                }
            }
        }
        return dist;
	}
};
