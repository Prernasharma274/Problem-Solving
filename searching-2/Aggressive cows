   bool isPossToPlaceCows(vector<int>& stalls, int numstalls, int cows, int distance)
    {
        int lastPlacedCow = stalls[0];
        int totalCowPlaced = 1;
        for(int i=1; i<numstalls; i++)
        {
            if((stalls[i]-lastPlacedCow) >= distance)
            {
                totalCowPlaced++;
                lastPlacedCow = stalls[i];
            }
        }
        return (totalCowPlaced >= cows);
    }
    int solve(int n, int k, vector<int> &stalls)
  {
        sort(stalls.begin(),stalls.end());
        int low = 1, high = stalls[n-1]-stalls[0];
        int ans = -1;
        while(low<=high)
        {
            int mid = high - (high-low)/2;
            if(isPossToPlaceCows(stalls,n,k,mid))
            {
                ans = mid;
                low = mid + 1;
            }
            else
                high = mid - 1;
        }
        return ans;
    }
