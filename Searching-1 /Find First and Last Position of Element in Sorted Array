class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int low=0;
        int high=nums.size()-1;
        int lb=nums.size();
        int ub=nums.size();
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(nums[mid]>=target) //binary search 1 for lower bound
            {
                lb=mid;
                high=mid-1;
            }
             else 
            {
                low=mid+1;
            }
        }
        low=0;
        high=nums.size()-1;
        while(low<=high)
         {
            int mid=(low+high)/2;
            if(nums[mid]>target) // binary search 2 for upper bound
            {
                ub=mid;
                high=mid-1;
            }
             else 
            {
                low=mid+1;
            }
        }
        if(lb==nums.size() || nums[lb]!=target) return{-1,-1};
        return{lb,ub-1};
    }
};
