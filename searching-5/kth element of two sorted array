int kthElement(vector<int> &arr1, vector<int>& arr2, int n, int m, int k){
    if(m<n)
        return kthElement(arr2,arr1,m,n,k);
    int low=max(0,k-m),high=min(k,n);
    
    while(low<=high) {
        int mid1=(low + high)/2; 
        int mid2=k-mid1; 
        int aleft=mid1==0 ? -2147483647:arr1[mid1-1];
        int bleft=mid2==0 ? -2147483647:arr2[mid2-1];
        int aright=mid1==m ? 2147483647:arr1[mid1];
        int bright=mid2==n ? 2147483647:arr2[mid2];
        if(aleft<=bright && bleft<=aright)
            return max(aleft,bleft);
        else if(aleft>bright)
            high=mid1-1;
        else if(bleft>aright)
            low=mid1+1;
    }
    return 0;
}
