class Solution {
  public:
    bool path(TreeNode* node,int target, string& s)
    {
        if(node==NULL) return 0;
        if(node->val==target) return 1;
        else if(path(node->left,target,s))
        {
            s.insert(0,"L");
            return 1;
        }
        else if(path(node->right,target,s))
        {
            s.insert(0,"R");
            return 1;
        }
        return 0;
    }
    string getDirections(TreeNode* root, int startValue, int destValue) {
        int s;
        string sv,dv; 
        trace_path(root,startValue,sv);
        trace_path(root,destValue,dv);
        int i=0, j=0;
        while(i<sv.length() && j<dv.length() && sv[i]!=dv[i])
        {
            i++;
            j++;
        }
        while(i<sv.length())
        {
            s++;
            i++;
        }
        while(j<dv.length())
        {
            s++;
            j++;
        }
        return s;
    }
};
