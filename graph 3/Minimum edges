class Solution{
    public:
         int minimumEdgeReversal(vector<vector<int>> &edges,int n,int src,int dst) {
            vector<pair<int,int>>v[n+1];
            for(int i=0; i<edges.size(); ++i) 
            {
                v[edges[i][0]].push_back({edges[i][1],0});
                v[edges[i][1]].push_back({edges[i][0],1});
            }
            priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
            vector<int>di(n+1,1e9);
            di[src]=0;
            pq.push({0,src});
            while(!pq.empty()) 
            {
                auto it=pq.top();
                pq.pop();
                int d=it.first, node=it.second;
                for(auto it:v[node]) 
                {
                    if(d+it.second<di[it.first]) 
                    {
                        di[it.first]=d+it.second;
                        pq.push({d+it.second,it.first});
                    }
                }
            }
            if(di[dst]==1e9)
            {
                return -1;
            }
            return di[dst];
        }
};
